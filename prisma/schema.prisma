// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @unique @default(autoincrement())
  email        String    @unique
  username     String
  password     String?
  isFirstLogin Boolean   @default(true)
  createdAt    DateTime  @default(now())
  lastLogin    DateTime?
  isOnline     Boolean   @default(false)
  messages     Message[] @relation("UserMessages")
  rooms        Room[]    @relation("UserRooms")
  createdRooms Room[]    @relation("RoomCreators")
  friends      Friend[]  @relation("UserFriends")

  Friend Friend[] @relation("FriendOfUsers")
}

model Room {
  id        Int       @id @unique @default(autoincrement())
  name      String    @unique
  password  String?
  isPrivate Boolean   @default(false)
  creator   User      @relation("RoomCreators", fields: [creatorID], references: [id])
  creatorID Int
  chatters  User[]    @relation("UserRooms")
  messages  Message[]
}

model Message {
  id        Int      @id @unique @default(autoincrement())
  content   String
  timeStamp DateTime @default(now())
  user      User     @relation("UserMessages", fields: [userID], references: [id])
  userID    Int
  room      Room     @relation(fields: [roomID], references: [id])
  roomID    Int
}

model Friend {
  id       Int  @id @default(autoincrement())
  user     User @relation("UserFriends", fields: [userID], references: [id])
  userID   Int
  friend   User @relation("FriendOfUsers", fields: [friendID], references: [id])
  friendID Int
}